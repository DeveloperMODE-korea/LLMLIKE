version: '3.8'

services:
  # PostgreSQL 데이터베이스
  db:
    image: postgres:15-alpine
    container_name: llmlike-db
    environment:
      POSTGRES_DB: llmlike
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-llmlike123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # 웹 기반 데이터베이스 관리 도구
  adminer:
    image: adminer:latest
    container_name: llmlike-adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: db

  # 백엔드 서버
  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: llmlike-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${DB_PASSWORD:-llmlike123}@db:5432/llmlike
      PORT: 3001
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 프론트엔드 (Nginx로 서빙)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: llmlike-frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ssl_certs:/etc/nginx/ssl

volumes:
  postgres_data:
  ssl_certs: 